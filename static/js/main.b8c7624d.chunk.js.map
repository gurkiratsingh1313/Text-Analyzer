{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_useState","useState","concat","mode","_useState2","Object","slicedToArray","modeName","setModeName","react_default","a","createElement","className","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","aria-pressed","autocomplete","TextForm","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","arr","split","i","charAt","slice","join","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","document","getElementById","select","navigator","clipboard","writeText","filter","element","replaceAll","Alert","alert","role","word","lower","capitalize","data-dismiss","aria-hidden","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b8c7624d.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  const [modeName, setModeName] = useState(`${props.mode}`)\r\n\r\n  const ChangeModeName = () => {\r\n    if (props.mode === 'dark') {\r\n      setModeName(\"dark\");\r\n    } else {\r\n      setModeName(\"light\")\r\n    }\r\n  }\r\n\r\n  return (\r\n  <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    {/* <Link className=\"navbar-brand text-black\" to=\"/\">{props.title}</Link> */}\r\n    <a className=\"navbar-brand text-black\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul className=\"navbar-nav\">\r\n        <li className=\"nav-item active\">\r\n          {/* <Link className=\"nav-link text-muted  text-white\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link> */}\r\n          <a className=\"nav-link text-muted  text-white\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link text-muted text-white\" to=\"/about\">About</Link> */}\r\n          <a className=\"nav-link text-muted text-white\" href=\"#\">About</a>\r\n        </li>\r\n\r\n      </ul>\r\n\r\n      \r\n    </div>\r\n        \r\n  </nav>\r\n      <div className=\"container d-flex justify-content-center my-3\">\r\n        <button type=\"button\" className={`btn btn-${props.mode}`} \r\n        // eslint-disable-next-line\r\n         data-toggle=\"button\" onClick={() => {{props.toggleMode()}; {ChangeModeName()}}} aria-pressed=\"false\" autocomplete=\"off\">\r\n          Enable {modeName} Mode\r\n        </button>\r\n      </div>\r\n</div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const handleUpperCase = ()=> {\r\n        let newText = text.toUpperCase();\r\n\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\")\r\n    }\r\n\r\n    const handleLowerCase = ()=> {\r\n        let newText = text.toLowerCase();\r\n\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\")\r\n    }\r\n\r\n    const handleTitleCase = ()=> {\r\n        let arr = text.split(\" \")\r\n\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n        }\r\n\r\n        const newText = arr.join(\" \");\r\n\r\n        setText(newText);\r\n\r\n        props.showAlert(\"Converted to Titlecase!\", \"success\")\r\n\r\n    }\r\n\r\n\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n        props.showAlert(\"Converted to Speech!\", \"success\")\r\n      }\r\n\r\n    const handleOnChange = (event)=> {\r\n        setText(event.target.value); }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value)\r\n        props.showAlert(\"Succesfully copied text\", \"success\")\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n\r\n  return (\r\n    <>\r\n     <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}> \r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#413F42':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpperCase}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-danger mx-1 my-1\" onClick={handleLowerCase}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-info mx-1 my-1\" onClick={handleTitleCase}>Convert to TitleCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-warning mx-1 my-1\" onClick={speak}>Convert to Speech</button>\r\n            <button disabled={text.length===0} className=\"btn btn-secondary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button disabled={text.length===0} className=\"btn btn-dark mx-1 my-1\" onClick={handleCopy}>Copy to clipboard</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.replaceAll(\" \", \"\").length} characters</p>\r\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)} </strong>{props.alert.msg}\r\n      <button\r\n        type=\"button\"\r\n        className=\"close\"\r\n        data-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\n// import About from './components/About'\nimport Alert from './components/Alert'\nimport React, {useState} from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=> {\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode(\"dark\")\n      document.body.style.backgroundColor = 'grey'\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n      document.title = \"Text Analyser - Dark Mode\"\n    } else {\n      setMode(\"light\")\n      document.body.style.backgroundColor = '#fff'\n      showAlert(\"Light Mode has been enabled\", \"success\")\n      document.title = \"Text Analyser - Light Mode\"\n    }\n  }\n\n\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Text Analyser\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Routes>\n            <Route path=\"/about\" element={<About />}>\n            </Route>\n            {/* <Route path=\"/\" */}\n            {<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}\n            {/* </Route>} */}\n      {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}